import { useEffect } from "react";
import { Page } from "@/components/Page.tsx";
import { Button,  } from "@telegram-apps/telegram-ui";
import "./rouletteStyles.css";
import { ModalPrize } from "./ModalPrize";
import { initData, useSignal, useLaunchParams, miniApp, openPopup } from "@telegram-apps/sdk-react";
import Bear from "../../../../assets/prize/bear.webp";
import happyBirth from "../../../../assets/prize/happyBirth.webp";

// üî• –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∫–æ–Ω–∫–∏
import StarIcon from "../../../../assets/prize/StarsIcon.webp";
import CaseIcon from "../../../../assets/cases/bday_case.webp";

import { PossiblePrizes } from "./PossiblePrizes";

import { useUnifiedRoulette } from "@/hooks/useUnifiedRoulette";
import { generateRoulette, startRolling } from "./generateRoulette";


import { useLanguage } from "@/components/LanguageContext";

const items = {
  1: { id: "5170233102089322756", img: Bear, price: 15, chance: "50%"},
  12: { id: "5782984811920491178", img: happyBirth, price: 350, chance: "50%"},
};



export const BdayCase: React.FC = () => {
  const initDataState = useSignal(initData.state);
  const user = initDataState?.user;
  const { platform } = useLaunchParams(); // –ü–æ–ª—É—á–∞–µ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
  const isDark = useSignal(miniApp.isDark);
  const {language} = useLanguage();

  useEffect(() => {
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è iOS
    if (platform === "ios") {
      const casePreviewCircle = document.querySelector(".case-preview-circle") as HTMLElement;
      const rouletteroller = document.querySelector(".raffle-roller") as HTMLElement;
      const rafflerollerholder = document.querySelector(".raffle-roller-holder") as HTMLElement;
      const caseCards = document.querySelectorAll(".raffle-roller-container .item");
      const container = document.querySelector(".possible-prizes-container") as HTMLElement | null;

      if (casePreviewCircle) {
        if (isDark) {
          casePreviewCircle.style.backgroundColor = "#232e3c"; // –¢—ë–º–Ω—ã–π —Ñ–æ–Ω –¥–ª—è iOS
        } else {
          casePreviewCircle.style.backgroundColor = "#f1f1f1"; // –°–≤–µ—Ç–ª—ã–π —Ñ–æ–Ω –¥–ª—è iOS
        }
      }

      if (rouletteroller) {
        if (isDark) {
          rouletteroller.style.backgroundColor = "#232e3c"; // –¢—ë–º–Ω—ã–π —Ñ–æ–Ω –¥–ª—è iOS
        } else {
          rouletteroller.style.backgroundColor = "#fff"; // –°–≤–µ—Ç–ª—ã–π —Ñ–æ–Ω –¥–ª—è iOS
        }
      }

      if (rafflerollerholder) {
        if (isDark) {
          rafflerollerholder.style.backgroundColor = "#232e3c"; // –¢—ë–º–Ω—ã–π —Ñ–æ–Ω –¥–ª—è iOS
        } else {
          rafflerollerholder.style.backgroundColor = "#f1f1f1"; // –°–≤–µ—Ç–ª—ã–π —Ñ–æ–Ω –¥–ª—è iOS
        }
      }
      if (!container) return;

      // –î–ª—è iOS –∑–∞–¥–∞–µ–º —Å—Ç–∏–ª—å
      if (platform === "ios") {
        if (isDark) {
          container.style.backgroundColor = "#232e3c"; // –¢—ë–º–Ω—ã–π —Ñ–æ–Ω –¥–ª—è iOS
        } else {
          container.style.backgroundColor = "#f1f1f1"; // –°–≤–µ—Ç–ª—ã–π —Ñ–æ–Ω –¥–ª—è iOS
        }
      }
      caseCards.forEach((card) => {
        const htmlElement = card as HTMLElement;
        if (isDark) {
          htmlElement.style.backgroundColor = "#111921"; // –¢—ë–º–Ω—ã–π —Ñ–æ–Ω –¥–ª—è iOS –∏ —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã
        } else {
          htmlElement.style.backgroundColor = "#fff"; // –°–≤–µ—Ç–ª—ã–π —Ñ–æ–Ω –¥–ª—è iOS –∏ —Å–≤–µ—Ç–ª–æ–π —Ç–µ–º—ã
        }
      });
    } else {
      // –ï—Å–ª–∏ –Ω–µ iOS, –ø—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
      const caseCards = document.querySelectorAll(".raffle-roller-container .item");

      caseCards.forEach((card) => {
        const htmlElement = card as HTMLElement;
        if (isDark) {
          htmlElement.style.backgroundColor = "#232e3c"; // –¢—ë–º–Ω—ã–π —Ñ–æ–Ω –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º –∏ —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã
        } else {
          htmlElement.style.backgroundColor = "#f1f1f1"; // –°–≤–µ—Ç–ª—ã–π —Ñ–æ–Ω –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º –∏ —Å–≤–µ—Ç–ª–æ–π —Ç–µ–º—ã
        }
      });
    }
  }, [platform, isDark]); // –ó–∞–ø—É—Å–∫–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –∏ —Ç–µ–º—ã
  
  const {
    winningItemId,
    gameStarted,
    isModalOpen,
    handleStart,
    handleCloseModal,
    handleSell,
    idGiftNumber,
  } = useUnifiedRoulette(
    'bday', // caseType
    175, // casePrice
    {
      generateRoulette,
      startRolling,
      items
    },
    user?.username
  );

  const winningItem = Object.values(items).find(item => item.id === winningItemId);
  console.log(`üé≤ –í—ã–∏–≥—Ä–∞–Ω–Ω—ã–π ID: ${winningItemId}`);

  

  return (
    <Page back={true}>
      <div className="scroll-wrapper">
      {/* üßä –ü—Ä–µ–≤—å—é –∫–µ–π—Å–∞ */}
      <div className="case-preview-circle">
        <img src={CaseIcon} alt="case" />
      </div>
      <div className="roulette-section">
      {/* üé∞ –†—É–ª–µ—Ç–∫–∞ */}
      <div className="raffle-roller">
        <div className="raffle-roller-holder">
          <div className="bottom-triangle"></div>
          <div className="raffle-roller-container" id="roulette-container"></div>
        </div>
      </div>

      {/* üîò –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ */}
      <div className="start-button"> 
        <Button
          onClick={async () => {
            // const isBlocked = await fetchCaseStatus(12); // üî• –∂–∏–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞

            // if (isBlocked) {
            //   await openPopup({
            //     title: language === 'ru' ? "–ö–µ–π—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω" : "Case Blocked",
            //     message: language === 'ru'
            //       ? "–≠—Ç–æ—Ç –∫–µ–π—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            //       : "This case is temporarily unavailable. Try again later.",
            //     buttons: [{ id: "ok", type: "default", text: "OK" }],
            //   });
            //   return;
            // }

            handleStart();
          }}
          disabled={gameStarted}
        >
          {language === 'ru' ? "–ò—Å–ø—ã—Ç–∞–π —É–¥–∞—á—É - 175" : "Try Your Luck - 175"}
          <img src={StarIcon} alt="star" />
        </Button>
      </div>

      {/* üéÅ –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏–∑—ã */}
      <PossiblePrizes items={items} />
      </div></div>
      {/* ü™Ñ –ú–æ–¥–∞–ª–∫–∞ —Å –≤—ã–∏–≥—Ä—ã—à–µ–º */}
      {winningItem && idGiftNumber !== null && (
        <ModalPrize
          isOpen={isModalOpen}
          winningItem={winningItem}
          idGiftNumber={idGiftNumber}
          onClose={handleCloseModal}
          onSell={handleSell}
        />
      )}
    </Page>
  );
};
